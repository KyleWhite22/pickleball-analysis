service: pickle-api

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-2
  stage: ${opt:stage, 'dev'}
  environment:
    TABLE_NAME: !Ref PickleballTable

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:DeleteItem
        - dynamodb:TransactWriteItems
      Resource:
        - !GetAtt PickleballTable.Arn
        - !Sub '${PickleballTable.Arn}/index/*'
  httpApi:
    cors:
      allowedOrigins:
        - http://localhost:5173
        - https://pickle.kyle-white.com
      allowedHeaders:
        - Authorization
        - Content-Type
      allowedMethods:
        - GET
        - POST
        - DELETE
        - OPTIONS
        - PATCH

functions:
  listLeagues:
    handler: src/leagues_list.handler
    events:
      - httpApi:
          path: /leagues
          method: GET

  createLeague:
    handler: src/leagues_create.handler
    events:
      - httpApi:
          path: /leagues
          method: POST

  listMatches:
    handler: src/matches_list.handler
    events:
      - httpApi:
          path: /leagues/{id}/matches
          method: GET

  createMatch:
    handler: src/matches_create.handler
    events:
      - httpApi:
          path: /leagues/{id}/matches
          method: POST

  getMetrics:
    handler: src/metrics_get.handler
    events:
      - httpApi:
          path: /leagues/{id}/metrics
          method: GET
  
  joinByCode:
    handler: src/join_by_code.handler
    events:
      - httpApi:
          path: /join/{code}
          method: POST
          
  getStandings:
    handler: src/standings_get.handler
    events:
      - httpApi:
          path: /leagues/{id}/standings
          method: GET

  playersList:
    handler: src/players_list.handler
    events:
      - httpApi:
          path: /leagues/{id}/players
          method: GET

  deleteLastMatch:
    handler: src/matches_delete_last.handler
    events:
      - httpApi:
          path: /leagues/{id}/matches/last
          method: DELETE

  getLeague:
    handler: src/league_get.handler
    events:
      - httpApi:
          path: /leagues/{id}
          method: GET

  renameLeague:
    handler: src/league_rename.handler
    events:
      - httpApi:
          path: /leagues/{id}
          method: PATCH    

  rotateInvite:
    handler: src/league_invite_rotate.handler
    events:
      - httpApi:
          path: /leagues/{id}/invite:rotate
          method: POST

package:
  patterns:
    - src/**
    - '!node_modules/**'

resources:
  Conditions:
    IsProd:
      Fn::Equals:
        - ${sls:stage}
        - prod

  Resources:
    ApiCustomDomain:
      Type: AWS::ApiGatewayV2::DomainName
      Condition: IsProd
      Properties:
        DomainName: api.pickle.kyle-white.com
        DomainNameConfigurations:
          - CertificateArn: arn:aws:acm:us-east-2:YOUR_ACCT:certificate/YOUR-CERT-ID
            EndpointType: REGIONAL
            SecurityPolicy: TLS_1_2

    ApiApiMapping:
      Type: AWS::ApiGatewayV2::ApiMapping
      Condition: IsProd
      Properties:
        ApiId: !Ref HttpApi        # Serverless-created HTTP API
        DomainName: api.pickle.kyle-white.com
        Stage: ${sls:stage}        # "prod" â†’ root path of the domain

    # Optional Route53 alias (if your hosted zone is in Route 53)
    ApiDomainRecord:
      Type: AWS::Route53::RecordSet
      Condition: IsProd
      Properties:
        HostedZoneName: pickle.kyle-white.com.
        Name: api.pickle.kyle-white.com
        Type: A
        AliasTarget:
          DNSName: !GetAtt ApiCustomDomain.RegionalDomainName
          HostedZoneId: !GetAtt ApiCustomDomain.RegionalHostedZoneId
    
    PickleballTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: pickleball-${sls:stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: S
          - AttributeName: GSI2PK
            AttributeType: S
          - AttributeName: GSI2SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: GSI2
            KeySchema:
              - AttributeName: GSI2PK
                KeyType: HASH
              - AttributeName: GSI2SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL