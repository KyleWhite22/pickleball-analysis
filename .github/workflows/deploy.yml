name: Deploy Pickle (Frontend)

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'

permissions:
  id-token: write
  contents: read

env:
  BUCKET: pickle.kyle-white.com
  DIST_ID: ${{ secrets.CLOUDFRONT_DIST_ID }}   # <â€” optional, safer

concurrency:
  group: frontend-deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    env:
      BUCKET: pickle.kyle-white.com
      DIST_ID: ${{ secrets.CLOUDFRONT_DIST_ID }}

      # ðŸ”‘ Vite envs injected at build time
      VITE_API_URL: https://api.pickle.kyle-white.com
      VITE_COGNITO_USER_POOL_ID: us-east-2_wvWmECk8W
      VITE_COGNITO_USER_POOL_CLIENT_ID: 5srl4gktjb9bvkm3n32c1ld
      VITE_COGNITO_DOMAIN: us-east-2wvwmeck8w.auth.us-east-2.amazoncognito.com

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      - name: Verify build has Cognito values
        run: |
          grep -R "us-east-2wvwmeck8w.auth.us-east-2.amazoncognito.com" dist/ -n
          grep -R "5srl4gktjb9bvkm3np3n32c1ld" dist/ -n

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::397570188272:role/github-oidc-deploy
          aws-region: us-east-2

      - name: Clean accidental /src
        run: aws s3 rm s3://$BUCKET/src --recursive || true

      - name: Sync assets
        run: |
          aws s3 sync dist/ s3://$BUCKET --delete \
            --exclude "index.html" \
            --cache-control "public,max-age=31536000,immutable"

      - name: Upload index.html
        run: |
          aws s3 cp dist/index.html s3://$BUCKET/index.html \
            --cache-control "no-cache" --content-type "text/html"

      - name: Invalidate CloudFront
        if: ${{ env.DIST_ID != '' }}
        run: aws cloudfront create-invalidation --distribution-id "$DIST_ID" --paths "/*"
