{
  "service": {
    "service": "pickle-api",
    "serviceObject": {
      "name": "pickle-api"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "region": "us-east-2",
      "stage": "prod",
      "deploymentBucket": "serverless-deploy-397570188272-us-east-2",
      "environment": {
        "TABLE_NAME": "pickle-api-table-prod"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:GetItem",
                "dynamodb:Query",
                "dynamodb:UpdateItem",
                "dynamodb:Scan"
              ],
              "Resource": "arn:aws:dynamodb:us-east-2:397570188272:table/pickle-api-table-prod"
            }
          ]
        }
      },
      "httpApi": {
        "cors": {
          "allowedOrigins": [
            "http://localhost:5173",
            "https://pickle.kyle-white.com"
          ],
          "allowedHeaders": [
            "Authorization",
            "Content-Type"
          ],
          "allowedMethods": [
            "GET",
            "POST",
            "OPTIONS"
          ],
          "allowCredentials": false
        },
        "authorizers": {
          "cognitoAuthorizer": {
            "type": "jwt",
            "identitySource": "$request.header.Authorization",
            "issuerUrl": "https://cognito-idp.us-east-2.amazonaws.com/us-east-2_wvWmECk8W",
            "audience": "5srl4gktjb9bvkm3np3n32c1ld"
          }
        }
      },
      "versionFunctions": true,
      "deploymentBucketObject": {
        "name": "serverless-deploy-397570188272-us-east-2",
        "serverSideEncryption": "AES256"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "PostMatchesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/pickle-api-prod-postMatches"
            }
          },
          "GetStandingsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/pickle-api-prod-getStandings"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "pickle-api",
                        "prod",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/pickle-api-prod*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/pickle-api-prod*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "pickle-api",
                    "prod",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "PostMatchesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-deploy-397570188272-us-east-2",
                "S3Key": "serverless/pickle-api/prod/1755638550625-2025-08-19T21:22:30.625Z/postMatches.zip"
              },
              "Handler": "src/matches.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "pickle-api-prod-postMatches",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "pickle-api-table-prod"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PostMatchesLogGroup"
            ]
          },
          "GetStandingsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-deploy-397570188272-us-east-2",
                "S3Key": "serverless/pickle-api/prod/1755638550625-2025-08-19T21:22:30.625Z/getStandings.zip"
              },
              "Handler": "src/standings.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "pickle-api-prod-getStandings",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "pickle-api-table-prod"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetStandingsLogGroup"
            ]
          },
          "GetStandingsLambdaVersion3jaBCHItQLG90yKlUHf4ssUHvHkhAdIpQi3DHRnQg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetStandingsLambdaFunction"
              },
              "CodeSha256": "Ank15KJDnnxzGJxHICq1IcxZvqwrWb2whV6LZBfup+8="
            }
          },
          "PostMatchesLambdaVersionA5XSqkHeP3MqbjY1fAOoP4nytuPdOhW9S4LIqV4UrD4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PostMatchesLambdaFunction"
              },
              "CodeSha256": "KGk+VAfEc+KA4hdL8ztmbs3cRnL4BMWOvm8AkGi5Lw0="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "prod-pickle-api",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowHeaders": [
                  "Authorization",
                  "Content-Type"
                ],
                "AllowMethods": [
                  "GET",
                  "POST",
                  "OPTIONS"
                ],
                "AllowOrigins": [
                  "http://localhost:5173",
                  "https://pickle.kyle-white.com"
                ]
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "HttpApiAuthorizerCognitoAuthorizer": {
            "Type": "AWS::ApiGatewayV2::Authorizer",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "Name": "cognitoAuthorizer",
              "IdentitySource": [
                "$request.header.Authorization"
              ],
              "AuthorizerType": "JWT",
              "JwtConfiguration": {
                "Audience": [
                  "5srl4gktjb9bvkm3np3n32c1ld"
                ],
                "Issuer": "https://cognito-idp.us-east-2.amazonaws.com/us-east-2_wvWmECk8W"
              }
            }
          },
          "PostMatchesLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PostMatchesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationPostMatches": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PostMatchesLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostMatches": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /matches",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationPostMatches"
                    }
                  ]
                ]
              },
              "AuthorizationType": "JWT",
              "AuthorizerId": {
                "Ref": "HttpApiAuthorizerCognitoAuthorizer"
              }
            },
            "DependsOn": "HttpApiIntegrationPostMatches"
          },
          "GetStandingsLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetStandingsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetStandings": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetStandingsLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetStandings": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /standings",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetStandings"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetStandings"
          },
          "PickleTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "pickle-api-table-prod",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "PK",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "SK",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "PK",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "SK",
                  "KeyType": "RANGE"
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-deploy-397570188272-us-east-2",
            "Export": {
              "Name": "sls-pickle-api-prod-ServerlessDeploymentBucketName"
            }
          },
          "GetStandingsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetStandingsLambdaVersion3jaBCHItQLG90yKlUHf4ssUHvHkhAdIpQi3DHRnQg"
            },
            "Export": {
              "Name": "sls-pickle-api-prod-GetStandingsLambdaFunctionQualifiedArn"
            }
          },
          "PostMatchesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PostMatchesLambdaVersionA5XSqkHeP3MqbjY1fAOoP4nytuPdOhW9S4LIqV4UrD4"
            },
            "Export": {
              "Name": "sls-pickle-api-prod-PostMatchesLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-pickle-api-prod-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-pickle-api-prod-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "tableName": "pickle-api-table-prod"
    },
    "plugins": [
      "serverless-esbuild"
    ],
    "pluginsData": {},
    "functions": {
      "postMatches": {
        "handler": "src/matches.handler",
        "events": [
          {
            "httpApi": {
              "path": "/matches",
              "method": "POST",
              "authorizer": {
                "name": "cognitoAuthorizer"
              }
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/matches"
          }
        ],
        "name": "pickle-api-prod-postMatches",
        "package": {
          "artifact": ".serverless\\postMatches.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "PostMatchesLambdaVersionA5XSqkHeP3MqbjY1fAOoP4nytuPdOhW9S4LIqV4UrD4"
      },
      "getStandings": {
        "handler": "src/standings.handler",
        "events": [
          {
            "httpApi": {
              "path": "/standings",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/standings"
          }
        ],
        "name": "pickle-api-prod-getStandings",
        "package": {
          "artifact": ".serverless\\getStandings.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "GetStandingsLambdaVersion3jaBCHItQLG90yKlUHf4ssUHvHkhAdIpQi3DHRnQg"
      }
    },
    "resources": {
      "Resources": {
        "PickleTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "pickle-api-table-prod",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "PK",
                "AttributeType": "S"
              },
              {
                "AttributeName": "SK",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "PK",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "SK",
                "KeyType": "RANGE"
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "pickle-api",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/pickle-api/prod/code-artifacts",
        "deploymentBucket": "serverless-deploy-397570188272-us-east-2"
      },
      "outputs": {
        "ApiUrl": {
          "Value": {
            "Fn::Sub": "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com"
          }
        },
        "TableName": {
          "Value": "pickle-api-table-prod"
        }
      }
    },
    "layers": {},
    "outputs": {
      "$ref": "$[\"service\"][\"initialServerlessConfig\"][\"outputs\"]"
    },
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/pickle-api/prod/1755638550625-2025-08-19T21:22:30.625Z",
    "artifact": ""
  }
}